{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/matt/Desktop/code/graphql_api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/matt/Desktop/code/graphql_api/frontend/src/components/Users.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    users {\\n      id\\n      name\\n      email\\n      booksCount\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Gravatar from 'react-gravatar';\nconst USERS_QUERY = gql(_templateObject());\n\nclass Users extends Component {\n  render() {\n    return React.createElement(Query, {\n      query: USERS_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Fetching..\");\n      if (error) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Error!\");\n      return React.createElement(\"div\", {\n        className: \"flex flex-wrap mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, data.users.map(user => {\n        return React.createElement(\"div\", {\n          key: user.id,\n          className: \"m-4 w-1/4 rounded overflow-hidden shadow-lg\",\n          onClick: this.props.selectUser.bind(this, user),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(UserAvatar, {\n          user: user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      }));\n    });\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/Users/matt/Desktop/code/graphql_api/frontend/src/components/Users.js"],"names":["React","Component","Query","gql","Gravatar","USERS_QUERY","Users","render","loading","error","data","users","map","user","id","props","selectUser","bind"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,WAAW,GAAGF,GAAH,mBAAjB;;AAWA,MAAMG,KAAN,SAAoBL,SAApB,CAA8B;AAC5BM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEG,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AACxB,eACE;AACE,UAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,UAAA,SAAS,EAAC,6CAFZ;AAGE,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,IAAtB,CAA2B,IAA3B,EAAiCJ,IAAjC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADF;AASD,OAVA,CADH,CADF;AAeD,KAnBH,CADF;AAuBD;;AAzB2B;;AA2B9B,eAAeP,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Gravatar from 'react-gravatar';\n\nconst USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      booksCount\n    }\n  }\n`;\n\nclass Users extends Component {\n  render() {\n    return (\n      <Query query={USERS_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <div>Fetching..</div>\n          if (error) return <div>Error!</div>\n          return (\n            <div className=\"flex flex-wrap mb-4\">\n              {data.users.map((user) => {\n                return (\n                  <div\n                    key={user.id}\n                    className=\"m-4 w-1/4 rounded overflow-hidden shadow-lg\"\n                    onClick={this.props.selectUser.bind(this, user)}\n                  >\n                    <UserAvatar user={user} />\n                  </div>\n                )\n              })}\n            </div>\n          )\n        }}\n      </Query>\n    )\n  }\n}\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}